{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","threshold","setThreshold","files","setFiles","className","onSubmit","event","preventDefault","axios","method","url","window","location","origin","data","then","response","console","log","catch","error","for","name","type","placeholder","required","onChange","target","value","id","min","max","step","formData","FormData","append","post","headers","enctype","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgFeA,MA3Ef,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGqBF,mBAAS,IAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAIaJ,qBAJb,mBAINK,EAJM,KAICC,EAJD,KA0Db,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SA1CW,SAACC,GAClBA,EAAMC,iBACNC,IAAM,CACFC,OAAQ,OAERC,IAAKC,OAAOC,SAASC,OAAO,QAC5BC,KAAM,CACJhB,OACAE,eAGLe,MAAK,SAAUC,GACZC,QAAQC,IAAIF,GACZjB,EAAQ,OAEXoB,OAAM,SAAUC,GACbH,QAAQC,IAAIE,OA0BhB,UACE,uBAAOC,IAAI,OAAX,kBACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,OAAOC,UAAQ,EAACC,SAxDvC,SAACpB,GACzBP,EAAQO,EAAMqB,OAAOC,QAuDuEA,MAAO9B,EAAM+B,GAAG,SACxG,uBAAOR,IAAI,YAAX,kCACA,uBAAOC,KAAK,YAAYC,KAAK,SAASO,IAAI,IAAIC,IAAI,IAAIC,KAAK,OAAOH,GAAG,YAAYH,SAtDzD,SAACpB,GAC7BL,EAAaK,EAAMqB,OAAOC,QAqD4FA,MAAO5B,IACzH,+CAEF,uBAAMK,SA7Be,SAACC,GACxBA,EAAMC,iBACN,IAAI0B,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAYjC,GAC5BM,IAAM4B,KAEJzB,OAAOC,SAASC,OAAO,aACvBoB,EAAU,CACVI,QAAS,CACP,eAAgB,yBAGnBtB,MAAK,SAAUC,GACZC,QAAQC,IAAIF,EAAQ,SAEvBG,OAAM,SAAUC,GACbH,QAAQC,IAAIE,EAAK,SAAL,kBAaoBkB,QAAQ,sBAA1C,UACE,uBAAOf,KAAK,OAAOD,KAAK,WAAWI,SAtDhB,SAACpB,GACxBH,EAASG,EAAMqB,OAAOzB,MAAM,KAqDuCuB,UAAQ,IACvE,mDC9DOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e9ea411b.chunk.js","sourcesContent":["import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [text, setText] = useState('');\n  const [threshold, setThreshold] = useState(0.8);\n  const [files, setFiles] = useState();\n\n  const handleInputChange = (event) => {\n    setText(event.target.value)\n  }\n\n  const handleThresholdChange = (event) => {\n    setThreshold(event.target.value)\n  }\n\n  const handleFileChange = (event) => {\n    setFiles(event.target.files[0]);\n  }\n\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      axios({\n          method: 'post',\n          //url: 'http://localhost:8000/api/',    //DEVELOPMENT\n          url: window.location.origin+'/api/',  //PRODUCTION\n          data: {\n            text,\n            threshold\n          }\n        })\n      .then(function (response) {\n          console.log(response);\n          setText('');\n      })\n      .catch(function (error) {\n          console.log(error);\n      })\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    var formData = new FormData();\n    formData.append('dataFile', files);\n    axios.post(\n      //'http://localhost:8000/api/multi',    //DEVELOPMENT\n      window.location.origin+'/api/multi',  //PRODUCTION\n      formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n  })\n    .then(function (response) {\n        console.log(response['data']);\n    })\n    .catch(function (error) {\n        console.log(error['response']['data']['message']);\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <label for=\"text\">Text</label>\n        <input name=\"text\" type=\"text\" placeholder=\"test\" required onChange={handleInputChange} value={text} id=\"text\" />\n        <label for=\"threshold\">Confidence threshold</label>\n        <input name=\"threshold\" type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" id=\"threshold\" onChange={handleThresholdChange} value={threshold}/>\n        <button>submit</button>\n      </form>\n      <form onSubmit={handleFormSubmit} enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"dataFile\" onChange={handleFileChange} required />\n        <button>submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}