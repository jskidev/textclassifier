{"version":3,"sources":["pages/Home.js","pages/New.js","pages/Classify.js","pages/Upload.js","pages/My404.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useEffect","canvasHeight","canvasWidth","renderer","THREE","viewHeight","document","getElementById","clientHeight","getStartedHeight","headerheight","window","innerWidth","setSize","console","log","innerHeight","parentNode","insertBefore","domElement","camera","position","set","lookAt","controls","OrbitControls","enableZoom","enablePan","scene","background","lights","add","geometry","lineMaterial","color","transparent","opacity","linewidth","meshMaterial","emissive","side","flatShading","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","mesh","line","render","animate","requestAnimationFrame","rotation","x","y","className","id","onClick","location","New","Classify","useState","text","setText","threshold","setThreshold","theResults","setTheResults","onSubmit","event","preventDefault","axios","method","url","origin","data","then","response","output","push","i","length","catch","error","for","name","type","placeholder","required","onChange","target","value","min","max","step","map","item","index","that","count","JSON","stringify","Upload","files","setFiles","formData","FormData","append","post","headers","enctype","My404","App","exact","path","children","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7d0db864.chunk.js","sourcesContent":["import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nfunction Home() {\r\n\r\n    useEffect(() => {\r\n        const renderer = new THREE.WebGLRenderer();\r\n        const viewHeight = document.getElementById('App').clientHeight;\r\n        const getStartedHeight = document.getElementById('GetStarted').clientHeight;\r\n        const headerheight = document.getElementById('Header').clientHeight;\r\n\r\n        var canvasHeight;\r\n        var canvasWidth;\r\n\r\n        if(window.innerWidth < 800){\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth - getStartedHeight;\r\n        } else if (window.innerWidth < 500) {\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth;\r\n        } else if (window.innerWidth < 300){\r\n            canvasHeight = viewHeight - getStartedHeight - (headerheight * 2);\r\n            canvasWidth = window.innerWidth;\r\n        } else {\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth - getStartedHeight - headerheight;\r\n        }\r\n\r\n        renderer.setSize( canvasWidth, canvasHeight );\r\n        console.log(window.innerWidth, window.innerHeight, getStartedHeight - headerheight)\r\n\r\n        document.getElementById('GetStarted').parentNode.insertBefore(renderer.domElement, document.getElementById('GetStarted'));\r\n        //document.getElementById('App').prepend( renderer.domElement );\r\n\r\n        const camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 500 );\r\n        camera.position.set( 0, 0, 100 );\r\n        camera.lookAt( 0, 0, 0 );\r\n\r\n        const controls = new OrbitControls( camera, renderer.domElement );\r\n        controls.enableZoom = false;\r\n        controls.enablePan = false;\r\n\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color( '#FFF' );\r\n\r\n        const lights = [];\r\n        lights[ 0 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n        lights[ 1 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n        lights[ 2 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n\r\n        lights[ 0 ].position.set( 0, 200, 0 );\r\n        lights[ 1 ].position.set( 100, 200, 100 );\r\n        lights[ 2 ].position.set( - 100, - 200, - 100 );\r\n\r\n        scene.add( lights[ 0 ] );\r\n        scene.add( lights[ 1 ] );\r\n        scene.add( lights[ 2 ] );\r\n\r\n        const geometry = new THREE.IcosahedronGeometry( 15 , 1 );\r\n\r\n        const lineMaterial = new THREE.LineBasicMaterial( { color: 0xffffff, transparent: true, opacity: 1, linewidth: 2 } );\r\n        const meshMaterial = new THREE.MeshPhongMaterial( { color: '#e74c3c', emissive: '#c0392b', side: THREE.DoubleSide, flatShading: true, polygonOffset: true, polygonOffsetFactor: 1, polygonOffsetUnits: 1} );\r\n\r\n        const mesh = new THREE.Mesh( geometry, meshMaterial );\r\n        var line = new THREE.LineSegments( geometry, lineMaterial );\r\n\r\n        mesh.add( line );\r\n        scene.add( mesh );\r\n\r\n        renderer.render( scene, camera );\r\n        var animate = function () {\r\n            requestAnimationFrame( animate );\r\n            mesh.rotation.x += 0.005;\r\n            mesh.rotation.y += 0.005;\r\n            renderer.render( scene, camera );\r\n          };\r\n        animate();\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        window.location = '/new'\r\n    }\r\n\r\n    return (\r\n    <div className=\"App\" id=\"App\">\r\n        <div className=\"Header\" id=\"Header\">\r\n            <h1 className=\"welcomeHeader\">Text Lab</h1>\r\n        </div>\r\n        <div className=\"GetStarted\" id=\"GetStarted\">\r\n            <button className=\"primaryButton\" onClick={handleClick}>GET STARTED</button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction New() {\r\n\r\n    const handleSingleClick = () => {\r\n        window.location = '/classify'\r\n    }\r\n    const handleMultipleClick = () => {\r\n        window.location = '/upload'\r\n    }\r\n    const handleHomeClick = () => {\r\n        window.location = '/'\r\n    }\r\n\r\n    return (\r\n        <div className=\"startContainer\">\r\n            <div className=\"startContent\">\r\n                <h2>Select classification method</h2>\r\n                <h4 className=\"pb20\">Do you want to manually classify sentences, or upload a csv to classify in bulk?</h4>\r\n                <button className=\"primaryButton buttonLeft\" onClick={handleSingleClick}>Manual</button>\r\n                <button className=\"primaryButton buttonRight\" onClick={handleMultipleClick}>Upload</button>\r\n                <p className=\"pb20\">\r\n                    <button className=\"linkButton\" onClick={handleHomeClick}>back to home</button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New;\r\n","import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Classify() {\r\n\r\n  const [text, setText] = useState('');\r\n  const [threshold, setThreshold] = useState(0.8);\r\n  const [theResults, setTheResults] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleThresholdChange = (event) => {\r\n    setThreshold(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      axios({\r\n          method: 'post',\r\n          //url: 'http://localhost:8000/api/',    //DEVELOPMENT\r\n          url: window.location.origin+'/api/',  //PRODUCTION\r\n          data: {\r\n            text,\r\n            threshold\r\n          }\r\n        })\r\n      .then(function (response) {\r\n          let output = [];\r\n          output.push(text);\r\n          for( var i = 0 ; i < response['data'].length ; i++){\r\n            output.push(response['data'][i]['results'][0]['match'])\r\n          }\r\n          setTheResults([...theResults, output]);\r\n          console.log(theResults);\r\n          setText('');\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label for=\"text\">Text</label>\r\n        <input name=\"text\" type=\"text\" placeholder=\"test\" required onChange={handleInputChange} value={text} id=\"text\" />\r\n        <label for=\"threshold\">Confidence threshold</label>\r\n        <input name=\"threshold\" type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" id=\"threshold\" onChange={handleThresholdChange} value={threshold}/>\r\n        <button>submit</button>\r\n      </form>\r\n      <div>\r\n      {  \r\n                theResults.length > 0 ? \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Text</th>\r\n                            <th>Identity Attack</th>\r\n                            <th>Insult</th>\r\n                            <th>Obscene</th>\r\n                            <th>Severe Toxicity</th>\r\n                            <th>Sexually Explicit</th>\r\n                            <th>Threat</th>\r\n                            <th>Toxicity</th>\r\n                        </tr>\r\n                    </thead>\r\n                        {\r\n                            theResults.map(\r\n                              (item, index) => ( \r\n                                  <tr>\r\n                                    {\r\n                                      item.map(\r\n                                        (that, count) => ( \r\n                                            <td>\r\n                                              {\r\n                                                (that === true || that === false || that == null) ? JSON.stringify(that) : that\r\n                                              }\r\n                                            </td>\r\n                                        )\r\n                                    )\r\n                                    }\r\n                                  </tr>\r\n                              )\r\n                          )\r\n                        }\r\n                </table>\r\n                : ''\r\n            }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Classify;\r\n","import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Upload() {\r\n\r\n  const [files, setFiles] = useState();\r\n\r\n  const handleFileChange = (event) => {\r\n    setFiles(event.target.files[0]);\r\n  }\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append('dataFile', files);\r\n    axios.post(\r\n      //'http://localhost:8000/api/multi',    //DEVELOPMENT\r\n      window.location.origin+'/api/multi',  //PRODUCTION\r\n      formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n  })\r\n    .then(function (response) {\r\n        console.log(response['data']);\r\n    })\r\n    .catch(function (error) {\r\n        console.log(error['response']['data']['message']);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleFormSubmit} enctype=\"multipart/form-data\">\r\n        <input type=\"file\" name=\"dataFile\" onChange={handleFileChange} required />\r\n        <button>submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import '../App.css';\r\n\r\nfunction My404() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      404\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default My404;\r\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\nimport Home from './pages/Home'\nimport New from './pages/New'\nimport Classify from './pages/Classify'\nimport Upload from './pages/Upload'\nimport My404 from './pages/My404'\n\nfunction App() {\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/new\">\n            <New />\n          </Route>\n          <Route path=\"/Classify\">\n            <Classify />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path='/404' exact children={<My404 />} />\n          <Redirect to=\"/404\" />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}