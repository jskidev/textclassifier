{"version":3,"sources":["pages/Home.js","pages/New.js","pages/Classify.js","pages/Upload.js","pages/My404.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","modalOpen","setModalOpen","useEffect","document","body","style","overflowY","backgroundColor","getElementById","children","canvasHeight","canvasWidth","renderer","THREE","viewHeight","clientHeight","getStartedHeight","headerheight","window","innerWidth","setSize","console","log","innerHeight","parentNode","insertBefore","domElement","camera","position","set","lookAt","controls","OrbitControls","enableZoom","enablePan","scene","background","lights","add","geometry","lineMaterial","color","transparent","opacity","linewidth","meshMaterial","emissive","side","flatShading","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","mesh","line","render","animate","requestAnimationFrame","rotation","x","y","handleHelp","className","id","onClick","location","New","Classify","text","setText","threshold","setThreshold","theResults","setTheResults","spinner","setSpinner","onSubmit","event","preventDefault","axios","method","url","origin","data","then","response","output","push","i","length","catch","error","for","name","placeholder","required","onChange","target","value","rows","cols","type","min","max","step","class","map","item","index","that","count","fontWeight","JSON","stringify","Upload","My404","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.adbcc200.chunk.js","sourcesContent":["import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nfunction Home() {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //Override styling for this individual page\r\n        document.body.style.overflowY = 'hidden';\r\n        document.body.style.backgroundColor = '#FFFFFF';\r\n        document.getElementById('root').style.backgroundColor = '#FFFFFF';\r\n        document.children[0].style.backgroundColor = '#FFFFFF';\r\n\r\n        const renderer = new THREE.WebGLRenderer();\r\n        const viewHeight = document.getElementById('App').clientHeight;\r\n        const getStartedHeight = document.getElementById('GetStarted').clientHeight;\r\n        const headerheight = document.getElementById('Header').clientHeight;\r\n\r\n        var canvasHeight;\r\n        var canvasWidth;\r\n\r\n        if(window.innerWidth < 800){\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth - getStartedHeight;\r\n        } else if (window.innerWidth < 500) {\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth;\r\n        } else if (window.innerWidth < 300){\r\n            canvasHeight = viewHeight - getStartedHeight - (headerheight * 2);\r\n            canvasWidth = window.innerWidth;\r\n        } else {\r\n            canvasHeight = viewHeight - getStartedHeight - headerheight;\r\n            canvasWidth = window.innerWidth - getStartedHeight - (headerheight*2);\r\n        }\r\n\r\n        renderer.setSize( canvasWidth, canvasHeight );\r\n        console.log(window.innerWidth, window.innerHeight, getStartedHeight - headerheight)\r\n\r\n        document.getElementById('GetStarted').parentNode.insertBefore(renderer.domElement, document.getElementById('GetStarted'));\r\n        //document.getElementById('App').prepend( renderer.domElement );\r\n\r\n        const camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 500 );\r\n        camera.position.set( 0, 0, 100 );\r\n        camera.lookAt( 0, 0, 0 );\r\n\r\n        const controls = new OrbitControls( camera, renderer.domElement );\r\n        controls.enableZoom = false;\r\n        controls.enablePan = false;\r\n\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color( '#FFF' );\r\n\r\n        const lights = [];\r\n        lights[ 0 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n        lights[ 1 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n        lights[ 2 ] = new THREE.PointLight( 0xffffff, 1, 0 );\r\n\r\n        lights[ 0 ].position.set( 0, 200, 0 );\r\n        lights[ 1 ].position.set( 100, 200, 100 );\r\n        lights[ 2 ].position.set( - 100, - 200, - 100 );\r\n\r\n        scene.add( lights[ 0 ] );\r\n        scene.add( lights[ 1 ] );\r\n        scene.add( lights[ 2 ] );\r\n\r\n        const geometry = new THREE.IcosahedronGeometry( 15 , 1 );\r\n\r\n        const lineMaterial = new THREE.LineBasicMaterial( { color: 0xffffff, transparent: true, opacity: 1, linewidth: 2 } );\r\n        const meshMaterial = new THREE.MeshPhongMaterial( { color: '#e74c3c', emissive: '#c0392b', side: THREE.DoubleSide, flatShading: true, polygonOffset: true, polygonOffsetFactor: 1, polygonOffsetUnits: 1} );\r\n\r\n        const mesh = new THREE.Mesh( geometry, meshMaterial );\r\n        var line = new THREE.LineSegments( geometry, lineMaterial );\r\n\r\n        mesh.add( line );\r\n        scene.add( mesh );\r\n\r\n        renderer.render( scene, camera );\r\n        var animate = function () {\r\n            requestAnimationFrame( animate );\r\n            mesh.rotation.x += 0.005;\r\n            mesh.rotation.y += 0.005;\r\n            renderer.render( scene, camera );\r\n          };\r\n        animate();\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        window.location = '/new'\r\n    }\r\n\r\n    const handleHelp = () => {\r\n        setModalOpen(!modalOpen);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\" id=\"App\">\r\n                <div className=\"Header\" id=\"Header\">\r\n                    <h1 className=\"welcomeHeader\">Text Lab</h1>\r\n                </div>\r\n                <div className=\"GetStarted\" id=\"GetStarted\">\r\n                    <button className=\"secondaryButton\" onClick={handleHelp}>HELP</button>\r\n                    <button className=\"primaryButton\" onClick={handleClick}>GET STARTED</button>\r\n                </div>\r\n            </div>\r\n            {modalOpen &&\r\n                <div className=\"backdrop\">\r\n                    <div className=\"content\">\r\n                        <div>\r\n                            <p>\r\n                                This tool will automatically analyse your text for toxicity using machine learning. \r\n                                It assesses for identity attacks, insults, obscenity, severe toxicity, sexual explicitness, threats, and toxicity.\r\n                            </p>\r\n                            <p>\r\n                                Let the tool analyse single sentences at a time, or upload a csv document and have your text analysed in bulk.\r\n                            </p>\r\n                            <p>\r\n                                Customise the confidence threshold of the tool to cater to your needs.\r\n                            </p>\r\n                        </div>\r\n                        <button className=\"secondaryButton\" onClick={handleHelp}>CLOSE</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction New() {\r\n\r\n    const handleSingleClick = () => {\r\n        window.location = '/classify'\r\n    }\r\n    const handleMultipleClick = () => {\r\n        window.location = '/upload'\r\n    }\r\n    const handleHomeClick = () => {\r\n        window.location = '/'\r\n    }\r\n\r\n    return (\r\n        <div className=\"startContainer\">\r\n            <div className=\"startContent\">\r\n                <h2>Select classification method</h2>\r\n                <h4 className=\"pb20\">Do you want to classify single sentences, or upload a csv to classify in bulk?</h4>\r\n                <button className=\"primaryButton buttonLeft\" onClick={handleSingleClick}>Single</button>\r\n                <button className=\"primaryButton buttonRight\" onClick={handleMultipleClick}>Upload</button>\r\n                <p className=\"pb20\">\r\n                    <button className=\"linkButton\" onClick={handleHomeClick}>back to home</button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New;\r\n","import './Classify.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Classify() {\r\n\r\n  const [text, setText] = useState('');\r\n  const [threshold, setThreshold] = useState(0.8);\r\n  const [theResults, setTheResults] = useState([]);\r\n  const [spinner, setSpinner] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleThresholdChange = (event) => {\r\n    setThreshold(event.target.value)\r\n  }\r\n\r\n  const handleNewClick = () => {\r\n    window.location = '/new'\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n      setSpinner(true);\r\n      event.preventDefault();\r\n      axios({\r\n          method: 'post',\r\n          //url: 'http://localhost:8000/api/',    //DEVELOPMENT\r\n          url: window.location.origin+'/api/',  //PRODUCTION\r\n          data: {\r\n            text,\r\n            threshold\r\n          }\r\n        })\r\n      .then(function (response) {\r\n          let output = [];\r\n          output.push(text);\r\n          for( var i = 0 ; i < response['data'].length ; i++){\r\n            output.push(response['data'][i]['results'][0]['match'])\r\n          }\r\n          setTheResults([...theResults, output]);\r\n          console.log(theResults);\r\n          setText('');\r\n          setSpinner(false);\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n          setSpinner(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"content\">\r\n          <form className=\"manualForm\" onSubmit={handleSubmit}>\r\n            <label for=\"text\">Sentence</label>\r\n            <textarea name=\"text\" placeholder=\"test\" required onChange={handleInputChange} value={text} id=\"text\" rows='10' cols='50' />\r\n            <label for=\"threshold\">Confidence threshold</label>\r\n            <input name=\"threshold\" type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" id=\"threshold\" onChange={handleThresholdChange} value={threshold}/>\r\n            <button className={spinner ? 'primaryButton submitted' : 'primaryButton'}>\r\n              {\r\n                spinner ?\r\n                <span class=\"spinner\"></span>\r\n                : 'Classify'\r\n              }\r\n            </button>\r\n          </form>\r\n          <p className=\"pb20\">\r\n              <button className=\"linkButton\" onClick={handleNewClick}>back to method</button>\r\n          </p>\r\n        </div>\r\n      <div className=\"fullWidth\">\r\n      </div>\r\n        {  \r\n            theResults.length > 0 ?\r\n            <div className=\"overflow\">\r\n              <table>\r\n                  <thead>\r\n                      <tr>\r\n                          <th>Text</th>\r\n                          <th>Identity Attack</th>\r\n                          <th>Insult</th>\r\n                          <th>Obscene</th>\r\n                          <th>Severe Toxicity</th>\r\n                          <th>Sexually Explicit</th>\r\n                          <th>Threat</th>\r\n                          <th>Toxicity</th>\r\n                      </tr>\r\n                  </thead>\r\n                      {\r\n                          theResults.map(\r\n                            (item, index) => ( \r\n                                <tr>\r\n                                  {\r\n                                    item.map(\r\n                                      (that, count) => ( \r\n                                          <td style={{color: that === true ? '#e74c3c' : '#000000', fontWeight: that === true ? '600' : '400' }}>\r\n                                            {\r\n                                              (that === true || that === false || that == null) ? JSON.stringify(that) : that\r\n                                            }\r\n                                          </td>\r\n                                      )\r\n                                  )\r\n                                  }\r\n                                </tr>\r\n                            )\r\n                        )\r\n                      }\r\n              </table>\r\n            </div>\r\n            : ''\r\n        }\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Classify;\r\n","import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Upload() {\r\n\r\n  const [files, setFiles] = useState();\r\n\r\n  const handleFileChange = (event) => {\r\n    setFiles(event.target.files[0]);\r\n  }\r\n\r\n  const handleNewClick = () => {\r\n    window.location = '/new'\r\n  }\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append('dataFile', files);\r\n    axios.post(\r\n      //'http://localhost:8000/api/multi',    //DEVELOPMENT\r\n      window.location.origin+'/api/multi',  //PRODUCTION\r\n      formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n  })\r\n    .then(function (response) {\r\n        console.log(response['data']);\r\n    })\r\n    .catch(function (error) {\r\n        console.log(error['response']['data']['message']);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content\">\r\n        {\r\n          /* \r\n          WORK IN PROGRESS\r\n          <form className=\"manualForm\" onSubmit={handleFormSubmit} enctype=\"multipart/form-data\">\r\n            <input type=\"file\" name=\"dataFile\" onChange={handleFileChange} required accept=\".csv\" />\r\n            <button className=\"primaryButton\">Upload</button>\r\n          </form>\r\n          */\r\n        }\r\n        <h2>Work In Progress</h2>\r\n        <p className=\"pb20\">\r\n            <button className=\"linkButton\" onClick={handleNewClick}>back to method</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import '../App.css';\r\n\r\nfunction My404() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      404\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default My404;\r\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\nimport Home from './pages/Home'\nimport New from './pages/New'\nimport Classify from './pages/Classify'\nimport Upload from './pages/Upload'\nimport My404 from './pages/My404'\n\nfunction App() {\n\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/new\">\n            <New />\n          </Route>\n          <Route path=\"/Classify\">\n            <Classify />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path='/404' exact children={<My404 />} />\n          <Redirect to=\"/404\" />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}